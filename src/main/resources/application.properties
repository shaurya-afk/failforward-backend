spring.application.name=deaddocs_backend
# Remove this line that's causing the profile issue
# spring.profiles.active=${SPRING_PROFILES_ACTIVE:local}

# Neon DB connection properties - Clean URL without embedded credentials
spring.datasource.url=jdbc:postgresql://ep-quiet-dawn-a180e803-pooler.ap-southeast-1.aws.neon.tech/failforward_db?sslmode=require&channelBinding=require
spring.datasource.username=neondb_owner
spring.datasource.password=npg_Rormv6Ji7DAN
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Connection pool settings for Neon
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1

# CORS
management.endpoints.web.cors.allowed-origins=http://localhost:3000
management.endpoints.web.cors.allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS